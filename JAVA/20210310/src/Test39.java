
/*
 	2. 배열메모리 생성시 직접 값을 저장하여 만드는 방법(배열선언, 배열생성, 배열초기화)
 	문법 > 자료형 [] 배열메모리의 주소를 저장할 변수명 = {값1,값2,값3,....값N};
 	
 	new 연산자로 인한 배열생성 문제점
 	>  생성된 배열에 데이터 저장시..한꺼번에 데이터를 저장하지 못하고, 인덱스 위치번호를 이용하여
 		각각의 위치마다 하나하나씩 데이터를 저장해야하는 불편함이 있다.
 		해결방법
 		>2. 배열메모리 생성시 직접 값을 저장하여 만드는 방법(배열선언, 배열생성, 배열초기화)
 */
public class Test39 {

	public static void main(String[] args) {
		
		//예제1. 배열선언,배열생성 5칸,5명의 학생점수 초기화 한 번에 하기
		int[] score = {50, 100, 80, 90, 30};
		// 				0   1   2   3   4
		
		//예제2. 배열선언(배열메모리의주소를담을변수선언),배열생성 4칸, 월드컵 참여 국가명 초기화 한꺼번에 하기)
		String[] worldCup = {"대한민국","러시아","벨기에","알제리"}; 
		//                      0       1		2		3
		
		//예제1-2 각 달의 날짜수를 반복해서 출력
		/*
		  1월 31일, 2월 28, 3월 31일
		  4월 30일, 5월 31일, 6월 30일
		  7월 31일, 8월 31일, 9월 30일
		  10월 31일, 11월 30일, 12월 31일
		 
		 */
 		
		int[] month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
		//				0	1	2	3	4	5	6	7	8	9	10	11
		
		for(int i=0;i<month.length;i++) {
			System.out.println((i+1) + "월은 " + month[i] + "일 까지 있음");
			
		}
		
		//출력형식
		//n월은 n일 까지 있음
		
		
		
		
		
		
		
		
		
		
	}

}
